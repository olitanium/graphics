#version 330 core

in vec2 texture_coord;

layout (location = 0) out vec4 frag_colour;
layout (location = 1) out vec4 bright_colour;

uniform sampler2D in_texture0;
uniform sampler2D in_texture1;

uniform float weight[25] = float[](0.0406109823177316,0.15435488462968,0.125835316956775,0.0870558796556308,0.0510464021617107,0.0253224741516049,0.0106011035855024,0.00373365150076393,0.0011019457554338,0.000271248185952935,0.0000553689229447386,0.00000930839863998505,0.00000127826601042048,0.00000014197697264944,0.00000001260356985274,0.00000000088136852117,0.00000000004769430922,0.00000000000195315449,0.00000000000005882995,1.25546824808166E-015,1.80383368977249E-017,1.62142354136853E-019,8.13423181288561E-022,1.86095442985258E-024,1.22431212490301E-027);
uniform float offset[25] = float[](0,1.51546391752577,3.5360824742268,5.55670103092784,7.57731958762887,9.5979381443299,11.6185567010309,13.639175257732,15.659793814433,17.680412371134,19.7010309278351,21.7216494845361,23.7422680412371,25.7628865979381,27.7835051546392,29.8041237113402,31.8247422680412,33.8453608247423,35.8659793814433,37.8865979381443,39.9072164948454,41.9278350515464,43.9484536082474,45.9690721649485,47.9896907216495);


void main() {  
    float x_dim = textureSize(in_texture1, 0).x;
    bright_colour = vec4(0.0);

    for (int i=0; i<25; i++) {
        bright_colour +=
            texture(in_texture1, (texture_coord + vec2(offset[i], 0.0) / x_dim))
                * weight[i];
        bright_colour +=
            texture(in_texture1, (texture_coord - vec2(offset[i], 0.0) / x_dim))
                * weight[i];
    }

    frag_colour = texture(in_texture0, texture_coord); // pass-through
}

